#! /usr/bin/env python3
import os, sys, pprint, argparse, traceback
from pathlib import Path
import ae_backend
from ae.utils import format_table

# ----------------------------------------------------------------------

def main(args: argparse.Namespace):
    chart = ae_backend.chart_v3.Chart(args.chart)
    results = chart.projection(args.projection).serum_circles(fold=args.fold)
    for res in results:
        print(f"SR {res.serum_no:4d} {chart.serum(res.serum_no).designation()} titrations:{chart.titers().titrations_for_serum(res.serum_no)}")
        if res.number_of_homologous_antigens():
            table = [["  ", "titer", "theor", "empir", "", "", f"col-basis:{res.column_basis}", f"fold:{res.fold}"]]
            for ag_data in res:
                status = ""
                if (theor := ag_data.theoretical) is not None:
                    theor = f"{theor:5.2f}"
                else:
                    theor = ""
                if (empir := ag_data.empirical) is not None:
                    empir = f"{empir:5.2f}"
                else:
                    empir = ""
                    status = ag_data.status()
                table.append(["", ag_data.titer, theor, empir, status, ag_data.antigen_no, chart.antigen(ag_data.antigen_no).designation()])
            print(format_table.format_table(table, field_sep=" "), end="\n\n")
        else:
            print("  no homologous antigens\n")

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)

    parser.add_argument("chart", type=Path)

    parser.add_argument("--fold", type=float, default=2.0)
    parser.add_argument("--projection", type=int, default=0)

    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
