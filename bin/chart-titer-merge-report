#! /usr/bin/env python3
import os, sys, pprint, argparse, traceback
from pathlib import Path
import ae_backend
import ae.virus.name_format

# ----------------------------------------------------------------------

def main(args: argparse.Namespace):
    for chart_file in args.chart:
        chart = ae_backend.chart_v3.Chart(chart_file)
        if args.common_only:
            antigens = chart.select_antigens(lambda ag: len(ag.layers()) > 1)
            sera = chart.select_sera(lambda sr: len(sr.layers()) > 1)
        else:
            antigens = chart.select_all_antigens()
            sera = chart.select_all_sera()
        titer_merge_report(chart, antigens=antigens, sera=sera)

# ----------------------------------------------------------------------

def titer_merge_report(chart: ae_backend.chart_v3.Chart, antigens: list, sera: list):
    print("antigens", len(antigens))
    print(ae.virus.name_format.name_format(antigens[0][1], "{?}"))
    print(ae.virus.name_format.name_format(antigens[0][1], "{continent} : {country} : {extra} : {host} : {host_location_isolation_year} : {name} : {reassortant} : {year} : {designation} : {passage} : {passage_without_date} : {reassortant} : {annotations} : {date} : {lab_id} : {aa} : {aa-163} : {laa-163} : {nuc} : {nuc-163} : {lnuc-163}"))
    print("sera", len(sera))
    print(ae.virus.name_format.name_format(sera[0][1], "{?}"))
    table = []
    # table.append([""] + [sr[0] + 1 for sr in sera])            # serum indexes
    # table.append([""] + [ae.virus.name_format.name_format(sr[1], "") for sr in sera])            # serum abbreviated names
    # pprint.pprint(table, width=200)

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)

    parser.add_argument("chart", nargs="+", type=Path)

    parser.add_argument("-a", "--all", dest="common_only", action="store_false", default=True, help="titer merge report for all antigens and sera")

    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
