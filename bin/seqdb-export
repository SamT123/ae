#! /usr/bin/env python3
"""
Export data from seqdb into fasta (sequences) and cvs (metainformation)
"""

import sys, os
#, datetime, re, json, subprocess
from pathlib import Path
import ae_backend

sSubtypeFix = {"B": "B", "BVIC": "B", "BV": "B", "BY": "B", "BYAM": "B", "A(H1N1)": "A(H1N1)", "H1": "A(H1N1)", "1": "A(H1N1)", "A(H3N2)": "A(H3N2)", "H3": "A(H3N2)", "3": "A(H3N2)"}

# ----------------------------------------------------------------------

def main(args):
    subtype = sSubtypeFix.get(args.subtype.upper())
    if subtype == "B" and len(args.subtype) > 1:
        lineage = args.subtype[1:].upper()
    else:
        lineage = None
    selected = ae_backend.seqdb.for_subtype(subtype).select_all()
    if lineage:
        selected.lineage(lineage)
    selected.find_masters()
    print(f">>> {subtype:7s} {len(selected)}", file=sys.stderr)


# ----------------------------------------------------------------------

import argparse, traceback

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("subtype")
    parser.add_argument("output", type=Path, help="output prefix without suffix")
    parser.add_argument('--min-aa-length', type=int, default=None)
    # parser.add_argument("charts", nargs="+")

    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
