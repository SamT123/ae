#!  /usr/bin/env python3
"""
Test reading fasta files
"""

import os, sys, pprint, argparse, traceback
from pathlib import Path
if os.environ.get("DYLD_INSERT_LIBRARIES"):
    sys.path[:0] = [str(Path(os.environ["AE_ROOT"], dir)) for dir in ["build.debug", "py"]]
else:
    sys.path[:0] = [str(Path(os.environ["AE_ROOT"], dir)) for dir in ["build", "py"]]
import ae.sequences.source.ncbi

# ----------------------------------------------------------------------

def main(args: list):
    num_seqs = 0
    messages = []
    unrecognized_locations = set()
    labs = set()
    reader = ae.sequences.source.ncbi.reader(args.ncbi_dir)
    for metadata, sequence in reader:
        if lab := metadata.get("lab"):
            labs.add(lab)
        if excluded := metadata.get("excluded"):
            print(f">> excluded: {metadata}")
        num_seqs += 1
    messages += reader.messages
    unrecognized_locations |= reader.unrecognized_locations
    print(f"{num_seqs} sequences read")
    # print(f"Labs: {len(labs)}\n{pprint.pformat(labs)}")
    print(f"Messages: {len(messages)}")
    if args.print_messages and messages:
        for msg in messages:
            print(f"  {msg.message_raw.type_short() if msg.message_raw else ' '} {msg.field}[{msg.value}]: {msg.message} @@ {msg.filename}:{msg.line_no}")
        if unrecognized_locations:
            print(f"Unrecognized locations: {len(unrecognized_locations)}")
            for loc in unrecognized_locations:
                print(f"  {loc}")

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("ncbi_dir", type=Path)
    parser.add_argument("-m", dest="print_messages", action='store_true', default=False)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)
