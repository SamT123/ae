#! /usr/bin/env python3
"""
Test reading fasta files
"""

import os, sys, pprint, argparse, traceback
from pathlib import Path
sys.path[:0] = [str(Path(os.environ["AE_ROOT"], dir)) for dir in ["build.debug", "py"]]
import ae.sequences.source.fasta

# ----------------------------------------------------------------------

def main(args: list):
    num_seqs = 0
    messages = []
    labs = set()
    for filename in args.filename:
        reader = ae.sequences.source.fasta.reader(filename)
        for metadata, sequence in reader:
            if lab := metadata.get("lab"):
                labs.add(lab)
            num_seqs += 1
        messages += reader.messages
    print(f"{num_seqs} sequences read")
    # print(f"Labs: {len(labs)}\n{pprint.pformat(labs)}")
    if messages:
        print(f"Messages: {len(messages)}")
        for msg in messages:
            print(f"  {msg.field}[{msg.value}]: {msg.message} @@ {msg.filename}:{msg.line_no}")
        # if unrecognized_locations := messages.unrecognized_locations():
        #     print(f"Unrecognized locations: {len(unrecognized_locations)}")
        #     for loc in unrecognized_locations:
        #         print(f"  {loc}")

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("filename", nargs="+", type=Path)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)
