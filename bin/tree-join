#! /usr/bin/env python3
# import os
import sys
import argparse
from pathlib import Path
import ae_backend.tree

# ----------------------------------------------------------------------

def main(args: argparse.Namespace):
    tree = ae_backend.tree.load(args.top_tree)
    print(f">>> top tree: {tree.number_of_leaves()} leaves", file=sys.stderr)
    join_node = tree.select_leaves().filter_seq_id([args.join_at])[0].parent()
    # print(f">>> join node: {join_node}", file=sys.stderr)
    ae_backend.tree.load_subtree(args.bottom_tree, join_node)
    print(f">>> joined tree: {tree.number_of_leaves()} leaves", file=sys.stderr)
    ae_backend.tree.export(tree, args.output_tree)

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("top_tree", type=Path)
    parser.add_argument("bottom_tree", type=Path)
    parser.add_argument("join_at", help='name of the leaf in the top tree which sibling of the bottom tree (printed by tree-split)')
    parser.add_argument("output_tree", type=Path)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    import traceback
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
