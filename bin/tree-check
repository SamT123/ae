#! /usr/bin/env python3

import os
import sys
import argparse
from pathlib import Path
import ae_backend

# ----------------------------------------------------------------------

def main(args: argparse.Namespace):
    tree = ae_backend.tree.load(args.input_tree)
    print(f">>> {tree.number_of_leaves()} leaves", file=sys.stderr)
    if bad_inodes := tree.select_inodes_with_just_one_child():
        bad_inodes_txt = "\n  ".join(f"{node.node_id()} --> {node.first_leaf().name()}" for node in bad_inodes)
        print(f">> tree has {len(bad_inodes)} inode(s) with just one child (raxml may fail)\n  {bad_inodes_txt}", file=sys.stderr)

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("input_tree", type=Path)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    import traceback
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
