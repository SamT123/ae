#! /usr/bin/env python3
"""
Reading tree test
"""

import os, sys, re, collections, pprint, argparse, traceback
from pathlib import Path
if os.environ.get("DYLD_INSERT_LIBRARIES"):
    sys.path[:0] = [str(Path(os.environ["AE_ROOT"], dir)) for dir in ["build.debug", "py"]]
else:
    sys.path[:0] = [str(Path(os.environ["AE_ROOT"], dir)) for dir in ["build", "py"]]
import ae_backend

# ----------------------------------------------------------------------

def main(args: argparse.Namespace):
    tree = ae_backend.tree.load(args.input)
    if args.output:
        ae_backend.tree.export(tree, args.output)

# ----------------------------------------------------------------------

try:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("input", type=Path)
    parser.add_argument("output", nargs="?", type=Path)
    args = parser.parse_args()
    exit_code = main(args) or 0
except Exception as err:
    print(f"> {err}\n{traceback.format_exc()}", file=sys.stderr)
    exit_code = 1
exit(exit_code)

# ======================================================================
